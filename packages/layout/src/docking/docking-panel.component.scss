@use "style" as nu;

:host {
    @include nu.var-option(docking-panel-t, auto);
    @include nu.var-option(docking-panel-r, auto);
    @include nu.var-option(docking-panel-b, auto);
    @include nu.var-option(docking-panel-l, auto);
    @include nu.var-option(docking-panel-w, auto);
    @include nu.var-option(docking-panel-h, auto);
    @include nu.var-option(docking-panel-content-w, ---docking-panel-w);
    @include nu.var-option(docking-panel-content-g, ---docking-panel-h);

    display: flex;
    flex-flow: column nowrap;
    align-items: stretch;
    position: absolute;
    box-sizing: border-box;
    overflow: hidden;

    top: var(---docking-panel-t);
    right: var(---docking-panel-r);
    bottom: var(---docking-panel-b);
    left: var(---docking-panel-l);

    width: var(---docking-panel-w);
    height: var(---docking-panel-h);

    &[animate] {
        transition:
            transform var(---docking-layout-anim-duration) var(---docking-layout-anim-ease),
            width var(---docking-layout-anim-duration) var(---docking-layout-anim-ease),
            height var(---docking-layout-anim-duration) var(---docking-layout-anim-ease);
    }

    &[side="top"], &[side="left"] {
        ---docking-panel-t-hide: -100%;
        ---docking-panel-t-visible: 0%;
    }
    &[side="bottom"], &[side="right"] {
        ---docking-panel-t-hide: 100%;
        ---docking-panel-t-visible: 0%;
    }

    &[state="hidden"] {
        &[orient="horizontal"] {
            transform: translateY(var(---docking-panel-t-hide));
        }

        &[orient="vertical"] {
            transform: translateX(var(---docking-panel-t-hide));
        }
    }

    &:not([state="hidden"]) {
        &[orient="horizontal"] {
            transform: translateY(var(---docking-panel-t-visible));
        }

        &[orient="vertical"] {
            transform: translateX(var(---docking-panel-t-visible));
        }
    }
}
